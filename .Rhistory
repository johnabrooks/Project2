c("enthusiactic","enthusiastic"),
c("excellente","excellent"),
c("explaination","explanation"),
c("finanace","finance"),
c("gliches","glitches"),
c("inforamtion","information"),
c("inperson","in person"),
c("interfereing","interfering"),
c("intrical","integral"),
c("leavning","leaving"),
c("managment","management"),
c("nintey percent","90\\%"),
c("particualry","particularly"),
c("perfer","prefer"),
c("persay",""), #just eliminate / extraneous
c("pletntiful","plentiful"),
c("Plexi Glass","plexiglass"),
c("positve","positive"),
c("postions","positions"),
c("prompty","promptly"),
c("puticular","particular"),
c("questons","questions"),
c("refferences","references"),
c("ressource","resource"),
c("ressources","resources"),
c("serie","series"), #alert
c("sifficient","sufficient"),
c("strenghts","strengths"),
c("stylis","stylus"),
c("THe","The"),
c("timefram","time frame"),
c("timeframe","time frame"),
c("timeframes","time frames"),
c("timeline","time line"),
c("timelines","time lines"),
c("unintentially","unintentionally"),
c("unprecedent","unprecedented")
))
misSpelled
colnames(misSpelled)
colnames(misSpelled) <- c("1","2")
misSpelled
## Misspellings
misSpelled <- data.frame(rbind(
c("adminsitrave","administrative"),
c("assesment","assessment"),
c("back and forths","redundant communication"),
c("beuracracy","bureaucracy"),
c("carreer","career"),
c("clickets","clicks"),
c("Clients\\'s","client's"),
c("Cluster\\'s","clusters"),
c("collegues","colleagues"),
c("collugies","colleagues"),
c("communicatiuons","communications"),
c("consistetnly","consistently"),
c("constent","constant"),
c("containg","containing"),
c("coporate","corporate"),
c("costings","costing"),
c("curretn","current"),
c("desking","desk"),
c("eceptional","exceptional"),
c("effrective","effective"),
c("emapathy","empathy"),
c("emial","email"),
c("empath ","empathetic"),
c("enthusiactic","enthusiastic"),
c("excellente","excellent"),
c("explaination","explanation"),
c("finanace","finance"),
c("gliches","glitches"),
c("inforamtion","information"),
c("inperson","in person"),
c("interfereing","interfering"),
c("intrical","integral"),
c("leavning","leaving"),
c("managment","management"),
c("nintey percent","90\\%"),
c("particualry","particularly"),
c("perfer","prefer"),
c("persay",""), #just eliminate / extraneous
c("pletntiful","plentiful"),
c("Plexi Glass","plexiglass"),
c("positve","positive"),
c("postions","positions"),
c("prompty","promptly"),
c("puticular","particular"),
c("questons","questions"),
c("refferences","references"),
c("ressource","resource"),
c("ressources","resources"),
c("serie","series"), #alert
c("sifficient","sufficient"),
c("strenghts","strengths"),
c("stylis","stylus"),
c("THe","The"),
c("timefram","time frame"),
c("timeframe","time frame"),
c("timeframes","time frames"),
c("timeline","time line"),
c("timelines","time lines"),
c("unintentially","unintentionally"),
c("unprecedent","unprecedented")
)) %>%
adjColNames(.,c("error","corrected"))
misSpelled
# Prepare to adjust names
adjColNames <- function(dataFrameIn,newNamesIn) {
colnames(dataFrameIn) <- newNamesIn
return(dataFrameIn)
}
## Misspellings
misSpelled <- data.frame(rbind(
c("adminsitrave","administrative"),
c("assesment","assessment"),
c("back and forths","redundant communication"),
c("beuracracy","bureaucracy"),
c("carreer","career"),
c("clickets","clicks"),
c("Clients\\'s","client's"),
c("Cluster\\'s","clusters"),
c("collegues","colleagues"),
c("collugies","colleagues"),
c("communicatiuons","communications"),
c("consistetnly","consistently"),
c("constent","constant"),
c("containg","containing"),
c("coporate","corporate"),
c("costings","costing"),
c("curretn","current"),
c("desking","desk"),
c("eceptional","exceptional"),
c("effrective","effective"),
c("emapathy","empathy"),
c("emial","email"),
c("empath ","empathetic"),
c("enthusiactic","enthusiastic"),
c("excellente","excellent"),
c("explaination","explanation"),
c("finanace","finance"),
c("gliches","glitches"),
c("inforamtion","information"),
c("inperson","in person"),
c("interfereing","interfering"),
c("intrical","integral"),
c("leavning","leaving"),
c("managment","management"),
c("nintey percent","90\\%"),
c("particualry","particularly"),
c("perfer","prefer"),
c("persay",""), #just eliminate / extraneous
c("pletntiful","plentiful"),
c("Plexi Glass","plexiglass"),
c("positve","positive"),
c("postions","positions"),
c("prompty","promptly"),
c("puticular","particular"),
c("questons","questions"),
c("refferences","references"),
c("ressource","resource"),
c("ressources","resources"),
c("serie","series"), #alert
c("sifficient","sufficient"),
c("strenghts","strengths"),
c("stylis","stylus"),
c("THe","The"),
c("timefram","time frame"),
c("timeframe","time frame"),
c("timeframes","time frames"),
c("timeline","time line"),
c("timelines","time lines"),
c("unintentially","unintentionally"),
c("unprecedent","unprecedented")
)) %>%
adjColNames(.,c("error","corrected"))
misSpelled
# Note that we need to escape the \b
str_replace_all("90% in 80's", "[[punct]]", "GG")
# Note that we need to escape the \b
str_replace_all("90% in 80's", "[[:punct:]]", "GG")
# Note that we need to escape the \b
str_replace_all("90% in 80's", "\\'", "\\'")
# Note that we need to escape the \b
str_replace_all("90% in 80's", "\\'", "t")
pattern <- "90\\%"
pattern
# Note that we need to escape the \b
str_replace_all("90% in 80's", "\\'", "\\'")
# Note that we need to escape the \b
str_replace_all("90% in 80's", "\\'", "\\{\\'}")
# Note that we need to escape the \b
str_replace_all("90% in 80's", "\\'", "\\\\'")
str_replace_all("adfasfdTrest", "[aeiou]", toupper)
textToPattern <- function(foundItem){
return(paste0("////",foundItem))
}
textToPattern("'")
textToPattern <- function(foundItem){
return(paste0("//",foundItem))
}
textToPattern
textToPattern <- function(foundItem){
return(paste0("//",foundItem))
}
textToPattern("'")
# Note that we need to escape the \b
str_replace_all("90% in 80's", "\\'", textToPattern)
# Note that we need to escape the \b
str_replace_all("90% in 80's", "[:punct:]", textToPattern)
# Change text to pattern
textToPatternNonAlphaNum <- function(foundItem){
return(paste0("//",foundItem))
}
# Note that we need to escape the \b
str_replace_all("90% in 80's", "[:punct:]", textToPatternNonAlphaNum)
str_replace_all("90% in 80's",pattern,"")
pattern
# Note that we need to escape the \b
pattern <- str_replace_all("90% in 80's", "[:punct:]", textToPatternNonAlphaNum)
str_replace_all("90% in 80's",pattern,"")
pattern
str_replace_all("90% in 80's","80\\\\'s","")
str_replace_all("90% in 80's","80\\'s","")
# Note that we need to escape the \b
pattern <- str_replace_all("90% in 80's", "[:punct:]", textToPatternNonAlphaNum)
pattern
# Note that we need to escape the \b
pattern <- str_replace_all("80's", "[:punct:]", textToPatternNonAlphaNum)
str_replace_all("90% in 80's",pattern,"")
# Note that we need to escape the \b
pattern <- str_replace_all("80's", "[:punct:]", textToPatternNonAlphaNum)
str_replace_all("90% in 80's",pattern,"")
str_replace_all("90% in 80's","80's","")
"!"#$%&’()*+,-./:;<=>?@[]^_`{|}~"
"!//"#$%&’()*+,-./:;<=>?@[]^_`{|}~"
"!\\"#$%&’()*+,-./:;<=>?@[]^_`{|}~"
"!'"'#$%&’()*+,-./:;<=>?@[]^_`{|}~"
# Note that we need to escape the \b
pattern <- str_replace_all("80's", "[!"#$%&’()*+,-./:;<=>?@[]^_`{|}~]", textToPatternNonAlphaNum)
# !"#$%&’()*+,-./:;<=>?@[]^_`{|}~
str_replace_all("90% in 80's","80's","")
str_replace_all(d,initialismPattern,"")
"!'"'#$%&’()*+,-./:;<=>?@[]^_`{|}~"
# Note that we need to escape the \b
pattern <- str_replace_all("80's", "[!"#$%&’()*+,-./:;<=>?@[]^_`{|}~]", textToPatternNonAlphaNum)
# !"#$%&’()*+,-./:;<=>?@[]^_`{|}~
str_replace_all("90% in 80's","80's","")
str_replace_all(d,initialismPattern,"")
"!$%&()*+-./:;<=>?@~"
# Note that we need to escape the \b
pattern <- str_replace_all("!$%&()*+-./:;<=>?@~", "[!$%&()*+-./:;<=>?@~]", "")
pattern
# Note that we need to escape the \b
pattern <- str_replace_all("!$90%&()*+-./:;<=>?@~", "[!$%&()*+-./:;<=>?@~]", "")
pattern
str_replace_all("90% in 80's","90%","")
str_replace_all("Clients's","Clients's","")
## Misspellings
misSpelled <- data.frame(rbind(
c("adminsitrave","administrative"),
c("assesment","assessment"),
c("back and forths","redundant communication"),
c("beuracracy","bureaucracy"),
c("carreer","career"),
c("clickets","clicks"),
c("Clients's","client's"),
c("Cluster's","clusters"),
c("collegues","colleagues"),
c("collugies","colleagues"),
c("communicatiuons","communications"),
c("consistetnly","consistently"),
c("constent","constant"),
c("containg","containing"),
c("coporate","corporate"),
c("costings","costing"),
c("curretn","current"),
c("desking","desk"),
c("eceptional","exceptional"),
c("effrective","effective"),
c("emapathy","empathy"),
c("emial","email"),
c("empath ","empathetic"),
c("enthusiactic","enthusiastic"),
c("excellente","excellent"),
c("explaination","explanation"),
c("finanace","finance"),
c("gliches","glitches"),
c("inforamtion","information"),
c("inperson","in person"),
c("interfereing","interfering"),
c("intrical","integral"),
c("leavning","leaving"),
c("managment","management"),
c("nintey percent","90percent"),
c("particualry","particularly"),
c("perfer","prefer"),
c("persay",""), #just eliminate / extraneous
c("pletntiful","plentiful"),
c("Plexi Glass","plexiglass"),
c("positve","positive"),
c("postions","positions"),
c("prompty","promptly"),
c("puticular","particular"),
c("questons","questions"),
c("refferences","references"),
c("ressource","resource"),
c("ressources","resources"),
c("serie","series"), #alert
c("sifficient","sufficient"),
c("strenghts","strengths"),
c("stylis","stylus"),
c("THe","The"),
c("timefram","time frame"),
c("timeframe","time frame"),
c("timeframes","time frames"),
c("timeline","time line"),
c("timelines","time lines"),
c("unintentially","unintentionally"),
c("unprecedent","unprecedented")
)) %>%
adjColNames(.,c("error","corrected"))
misSpelled
misSpelled
textToPatternGeneral <- function(foundItem){
return(paste0("//b",foundItem,"//b"))
}
sapply(misSpelled$error,textToPatternGeneral)
misSpelled %>%
mutate(error = paste0("//b",error,"//b"))
misSpelled %>%
mutate(error = paste0("//b",error,"//b")) -> p1
p1
str_replace_all("deal with adminsitrave", p1$error[1], p1$corrected[1])
p1$error[1]
misSpelled %>%
mutate(error = paste0("//<",error,"//>")) -> p1
str_replace_all("deal with adminsitrave", p1$error[1], p1$corrected[1])
p1$error[1]
misSpelled %>%
mutate(error = paste0("//b",error)) -> p1
str_replace_all("deal with adminsitrave", p1$error[1], p1$corrected[1])
str_replace_all("deal with adminsitrave", "adminsitrave", p1$corrected[1])
str_replace_all("deal with adminsitrave", "\\badminsitrave", p1$corrected[1])
str_replace_all("deal with adminsitrave", "\\badminsitrave\\b", p1$corrected[1])
str_replace_all("deal with radminsitrave", misSpelled$error[1], p1$corrected[1])
str_replace_all("deal with radminsitrave", p1$error[1], p1$corrected[1])
p1$error[1]
misSpelled %>%
mutate(error = paste0("/b",error)) -> p1
str_replace_all("deal with radminsitrave", p1$error[1], p1$corrected[1])
str_replace_all("deal with adminsitrave", p1$error[1], p1$corrected[1])
misSpelled %>%
mutate(error = paste0("//b",error)) -> p1
str_replace_all("deal with adminsitrave", p1$error[1], p1$corrected[1])
expression("re")
expression("\\bre")
eval("br")
eval("\\bbr")
str_replace_all("deal with adminsitrave", eval(p1$error[1]), p1$corrected[1])
str_replace_all("deal with adminsitrave", expression(p1$error[1]), p1$corrected[1])
str_replace_all("deal with adminsitrave", eval(expression(p1$error[1])), p1$corrected[1])
str_replace_all("deal with radminsitrave", "\\badminsitrave\\b", p1$corrected[1])
str_replace_all("deal with adminsitrave", "\\badminsitrave\\b", p1$corrected[1])
pattern <- "\\badminsitrave\\b"
pattern <- "\\badminsitrave\\b"
str_replace_all("deal with adminsitrave", pattern, p1$corrected[1])
pattern <- c("\\badminsitrave\\b","\\badminsitrave\\b")
str_replace_all("deal with adminsitrave", pattern[1], p1$corrected[1])
pattern <- p1$error[1]
pattern
str_replace_all("deal with adminsitrave", pattern, p1$corrected[1])
pattern <- p1$error[1]
pattern
pattern <- as.character(p1$error[1])
str_replace_all("deal with adminsitrave", pattern, p1$corrected[1])
# misSpelled$error
sapply(misSpelled$error,textToPatternGeneral)
# misSpelled$error
sapply(misSpelled$error,textToPatternGeneral) -> p2
pattern <- pattern[1]
pattern
str_replace_all("deal with adminsitrave", pattern, p1$corrected[1])
pattern <- textToPatternGeneral("adminsitrave")
pattern
str_replace_all("deal with adminsitrave", pattern, p1$corrected[1])
str_replace_all("deal with adminsitrave", paste0("//b","adminsitrave","//b"), p1$corrected[1])
paste0("//b","adminsitrave","//b") == "\\badminsitrave\\b"
misSpelled %>%
mutate(error = paste0("\\b",error)) -> p1
str_replace_all("deal with adminsitrave",p1$error[1], p1$corrected[1])
misSpelled %>%
mutate(error = paste0("\\b",error,"\\b")) -> p1
str_replace_all("deal with adminsitrave",p1$error[1], p1$corrected[1])
dim(p1)
dim(p1)[1]
frameSubstitute <- p1
frameSubstitute <- p1
p1
targetText <- "deal with adminsitrave"
targetText[1]
targetText <- "deal with adminsitrave"
for(misSpellingIndex in 1:dim(frameSubstitute)[1]){
targetText[1] <- str_replace_all(targetText[1],
frameSubstitute$error[misSpellingIndex],
frameSubstitute$corrected[misSpellingIndex])
}
targetText
targetText <- "deal with adminsitrave"
for(misSpellingIndex in 1:dim(frameSubstitute)[1]){
targetText[1] <- str_replace_all(targetText[1],
frameSubstitute$error[misSpellingIndex],
frameSubstitute$corrected[misSpellingIndex])
}
targetText <- "deal with adminsitrave"
resultText <- as.character(rep(NA,length(targetText)))
resultText
frameSubstitute <- p1
targetText <- "deal with adminsitrave"
resultText <- as.character(rep(NA,length(targetText)))
for(misSpellingIndex in 1:dim(frameSubstitute)[1]){
resultText[1] <- str_replace_all(targetText[1],
frameSubstitute$error[misSpellingIndex],
frameSubstitute$corrected[misSpellingIndex])
}
resultText
frameSubstitute <- p1
targetText <- "deal with adminsitrave"
resultText <- as.character(rep(NA,length(targetText)))
for(misSpellingIndex in 1:dim(frameSubstitute)[1]){
resultText[1] <- str_replace_all(targetText[1],
frameSubstitute$error[misSpellingIndex],
frameSubstitute$corrected[misSpellingIndex])
}
resultText
for(misSpellingIndex in 1:dim(frameSubstitute)[1]){
targetText[1] <- str_replace_all(targetText[1],
frameSubstitute$error[misSpellingIndex],
frameSubstitute$corrected[misSpellingIndex])
}
targetText
for(misSpellingIndex in 1:dim(frameSubstitute)[1]){
targetText[1] <- str_replace_all(resultText[1],
frameSubstitute$error[misSpellingIndex],
frameSubstitute$corrected[misSpellingIndex])
}
resultText
frameSubstitute <- p1
targetText <- "deal with adminsitrave"
resultText <- targetText
for(misSpellingIndex in 1:dim(frameSubstitute)[1]){
resultText[1] <- str_replace_all(resultText[1],
frameSubstitute$error[misSpellingIndex],
frameSubstitute$corrected[misSpellingIndex])
}
resultText
frameSubstitute <- p1
targetText <- "deal with adminsitrave"
resultText <- targetText
for(misSpellingIndex in 1:dim(frameSubstitute)[1]){
for(textTargetIndex in 1:dim(resultText)[1]){
resultText[textTargetIndex] <- str_replace_all(resultText[textTargetIndex],
frameSubstitute$error[misSpellingIndex],
frameSubstitute$corrected[misSpellingIndex])
}
}
correctText <- function(targetTextIn){
resultText <- targetTextIn
for(misSpellingIndex in 1:dim(frameSubstitute)[1]){
resultText[1] <- str_replace_all(resultText[1],
frameSubstitute$error[misSpellingIndex],
frameSubstitute$corrected[misSpellingIndex])
}
return(resultText)
}
correctText <- function(targetTextIn){
resultText <- targetTextIn
for(misSpellingIndex in 1:dim(frameSubstitute)[1]){
resultText[1] <- str_replace_all(resultText[1],
frameSubstitute$error[misSpellingIndex],
frameSubstitute$corrected[misSpellingIndex])
}
return(resultText)
}
correctText(targetText)
correctText("deal with adminsitrave")
correctText("deal with adminsitrave")
model = read.vectors("word2vec.model")
library(devtools)
library(httr)
library(tm)
library(wordVectors)
library(rword2vec)
library(magrittr)
library(word2vec)
library(R.utils)
model = read.vectors("word2vec.model")
install.packages("reticulate")
py_install('pandas')
library(reticulate)
py_install('pandas')
py_install('numpy')
py_install('bs4', pip=T)
py_install('regex', pip = T)
py_install('nltk')
py_install('gensim')
py_install('lxml')
y
model = read.word2vec("word2vec.model")
model = read.word2vec("word2vecModel.bin")
model
model$vocabulary
