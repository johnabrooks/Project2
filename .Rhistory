c("emial","email"),
c("empath ","empathetic"),
c("enthusiactic","enthusiastic"),
c("excellente","excellent"),
c("explaination","explanation"),
c("finanace","finance"),
c("gliches","glitches"),
c("inforamtion","information"),
c("inperson","in person"),
c("interfereing","interfering"),
c("intrical","integral"),
c("leavning","leaving"),
c("managment","management"),
c("nintey percent","90percent"),
c("particualry","particularly"),
c("perfer","prefer"),
c("persay",""), #just eliminate / extraneous
c("pletntiful","plentiful"),
c("Plexi Glass","plexiglass"),
c("positve","positive"),
c("postions","positions"),
c("prompty","promptly"),
c("puticular","particular"),
c("questons","questions"),
c("refferences","references"),
c("ressource","resource"),
c("ressources","resources"),
c("serie","series"), #alert
c("sifficient","sufficient"),
c("strenghts","strengths"),
c("stylis","stylus"),
c("THe","The"),
c("timefram","time frame"),
c("timeframe","time frame"),
c("timeframes","time frames"),
c("timeline","time line"),
c("timelines","time lines"),
c("unintentially","unintentionally"),
c("unprecedent","unprecedented")
)) #%>%
adjColNames(.,c("error","corrected"))
# Initialization
library(xlsx)
library(tidyr)
library(tidytext)
library(tidyverse)
library(dplyr)
library(stringr)
library(word2vec)
library(R.utils)
# File path
questionsInFile <- "/Users/johnbrooks/Dropbox/R_files/Users/johnbrooks/Dropbox/Synced/R/STAT 5702/Store/masterResponse.xlsx"
questionsData <- readxl::read_xlsx(questionsInFile)
adjColNames <- function(dfIn,newNames){
return(colnames(dfIn) <- newNames)
}
# Discovered misspelling
misSpelled <- data.frame(rbind(
c("adminsitrave","administrative"),
c("assesment","assessment"),
c("back and forths","redundant communication"),
c("beuracracy","bureaucracy"),
c("carreer","career"),
c("clickets","clicks"),
c("Clients's","client's"),
c("Cluster's","clusters"),
c("collegues","colleagues"),
c("collugies","colleagues"),
c("communicatiuons","communications"),
c("consistetnly","consistently"),
c("constent","constant"),
c("containg","containing"),
c("coporate","corporate"),
c("costings","costing"),
c("curretn","current"),
c("desking","desk"),
c("eceptional","exceptional"),
c("effrective","effective"),
c("emapathy","empathy"),
c("emial","email"),
c("empath ","empathetic"),
c("enthusiactic","enthusiastic"),
c("excellente","excellent"),
c("explaination","explanation"),
c("finanace","finance"),
c("gliches","glitches"),
c("inforamtion","information"),
c("inperson","in person"),
c("interfereing","interfering"),
c("intrical","integral"),
c("leavning","leaving"),
c("managment","management"),
c("nintey percent","90percent"),
c("particualry","particularly"),
c("perfer","prefer"),
c("persay",""), #just eliminate / extraneous
c("pletntiful","plentiful"),
c("Plexi Glass","plexiglass"),
c("positve","positive"),
c("postions","positions"),
c("prompty","promptly"),
c("puticular","particular"),
c("questons","questions"),
c("refferences","references"),
c("ressource","resource"),
c("ressources","resources"),
c("serie","series"), #alert
c("sifficient","sufficient"),
c("strenghts","strengths"),
c("stylis","stylus"),
c("THe","The"),
c("timefram","time frame"),
c("timeframe","time frame"),
c("timeframes","time frames"),
c("timeline","time line"),
c("timelines","time lines"),
c("unintentially","unintentionally"),
c("unprecedent","unprecedented")
)) %>%
adjColNames(.,c("error","corrected"))
# Initialization
library(xlsx)
library(tidyr)
library(tidytext)
library(tidyverse)
library(dplyr)
library(stringr)
library(word2vec)
library(R.utils)
# File path
questionsInFile <- "/Users/johnbrooks/Dropbox/R_files/Users/johnbrooks/Dropbox/Synced/R/STAT 5702/Store/masterResponse.xlsx"
questionsData <- readxl::read_xlsx(questionsInFile)
adjColNames <- function(dfIn,newNames){
return(colnames(dfIn) <- newNames)
}
# Discovered misspelling
misSpelled <- data.frame(rbind(
c("adminsitrave","administrative"),
c("assesment","assessment"),
c("back and forths","redundant communication"),
c("beuracracy","bureaucracy"),
c("carreer","career"),
c("clickets","clicks"),
c("Clients's","client's"),
c("Cluster's","clusters"),
c("collegues","colleagues"),
c("collugies","colleagues"),
c("communicatiuons","communications"),
c("consistetnly","consistently"),
c("constent","constant"),
c("containg","containing"),
c("coporate","corporate"),
c("costings","costing"),
c("curretn","current"),
c("desking","desk"),
c("eceptional","exceptional"),
c("effrective","effective"),
c("emapathy","empathy"),
c("emial","email"),
c("empath ","empathetic"),
c("enthusiactic","enthusiastic"),
c("excellente","excellent"),
c("explaination","explanation"),
c("finanace","finance"),
c("gliches","glitches"),
c("inforamtion","information"),
c("inperson","in person"),
c("interfereing","interfering"),
c("intrical","integral"),
c("leavning","leaving"),
c("managment","management"),
c("nintey percent","90percent"),
c("particualry","particularly"),
c("perfer","prefer"),
c("persay",""), #just eliminate / extraneous
c("pletntiful","plentiful"),
c("Plexi Glass","plexiglass"),
c("positve","positive"),
c("postions","positions"),
c("prompty","promptly"),
c("puticular","particular"),
c("questons","questions"),
c("refferences","references"),
c("ressource","resource"),
c("ressources","resources"),
c("serie","series"), #alert
c("sifficient","sufficient"),
c("strenghts","strengths"),
c("stylis","stylus"),
c("THe","The"),
c("timefram","time frame"),
c("timeframe","time frame"),
c("timeframes","time frames"),
c("timeline","time line"),
c("timelines","time lines"),
c("unintentially","unintentionally"),
c("unprecedent","unprecedented")
)) %>%
adjColNames(.,c("error","corrected"))
# Change misSpellings into substitution ready patterns
misSpelled %>%
mutate(error = paste0("\\b",error,"\\b")) -> p1
# Take away NA
questionsData %>%
filter(!is.na(response)) -> noNAAnswers
# Replace misSpellings
for(indexAnswer in 1:dim(misSpelled)[1]) {
noNAAnswers %>%
mutate(english = str_replace_all(english,p1[indexAnswer,1],p1[indexAnswer,2])) -> noNAAnswers
}
# xlsx::write.xlsx2(noNAAnswers, "/Users/johnbrooks/Dropbox/R_files/Users/johnbrooks/Dropbox/Synced/R/STAT 5702/Store/noNonsense.xlsx")
# Once we have adjusted the entences properly
sentenceTokenize = noNAAnswers %>%
unnest_tokens(output = sentences, token="sentences", input = english) %>%
select(c_1, column, sentences)
dePunct = sentenceTokenize %>%
mutate(sentences = str_replace_all(sentences,"[[:punct:]]"," "))
# Number of questions
questionColumns <- unique(questionsData$column)
# Filter to run on python
for(indexQuestion in 1:length(questionColumns)){
dePunct %>%
filter(column == questionColumns[indexQuestion]) %>%
select(c_1,sentences) %>%
data.frame() -> currentPull
# Need to 0 this so it will play nicely with sklearn
rownames(currentPull) <- as.numeric(rownames(currentPull))-1
xlsx::write.xlsx2(currentPull, paste0(
"/Users/johnbrooks/Dropbox/R_files/Users/johnbrooks/Dropbox/Synced/R/STAT 5702/Store/",
questionColumns[indexQuestion],
".xlsx"))
}
knitr::opts_chunk$set(echo = TRUE)
# Installs if needed
# install.packages("reticulate")
# Load Packages
library(xlsx)
library(tidyr)
library(tidytext)
library(tidyverse)
library(dplyr)
library(stringr)
library(word2vec)
library(R.utils)
library(ggplot2)
library(gridExtra)
# For Python
library(reticulate)
# use_python("/usr/local/bin/python3")
# use_python may not be sufficient
## For maximal override:
## Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
## To naturally adjust this:
## go to terminal and explore in base directory
## ls -a
## if .Renviron is defined then skip touching otherwise touch to create the file:
## touch .Renviron
## now edit the file:
## nano .Renviron
## now add the line:
## RETICULATE_PYTHON="enter your desired path here"
## e.g. RETICULATE_PYTHON="/usr/local/bin/python3"
## now exit and save
## command + X or ctrl + X
## press Y when prompted
# Check success with
## reticulate::py_discover_config()
## reticulate::py_config()
# Store path
storePath = "/Users/johnbrooks/Dropbox/R_files/Users/johnbrooks/Dropbox/Synced/R/STAT 5702/Store/"
questionsInFile <- paste0(storePath,"masterResponse.xlsx")
# Read the file
questionsData <- readxl::read_xlsx(questionsInFile)
# Create name adjustment tool
adjColNames <- function(dfIn,newNames){
return(colnames(dfIn) <- newNames)
}
# Discovered misspelling
misSpelled <- data.frame(rbind(
c("adminsitrave","administrative"),
c("assesment","assessment"),
c("back and forths","redundant communication"),
c("beuracracy","bureaucracy"),
c("carreer","career"),
c("clickets","clicks"),
c("Clients's","client's"),
c("Cluster's","clusters"),
c("collegues","colleagues"),
c("collugies","colleagues"),
c("communicatiuons","communications"),
c("consistetnly","consistently"),
c("constent","constant"),
c("containg","containing"),
c("coporate","corporate"),
c("costings","costing"),
c("curretn","current"),
c("desking","desk"),
c("eceptional","exceptional"),
c("effrective","effective"),
c("emapathy","empathy"),
c("emial","email"),
c("empath ","empathetic"),
c("enthusiactic","enthusiastic"),
c("excellente","excellent"),
c("explaination","explanation"),
c("finanace","finance"),
c("gliches","glitches"),
c("inforamtion","information"),
c("inperson","in person"),
c("interfereing","interfering"),
c("intrical","integral"),
c("leavning","leaving"),
c("managment","management"),
c("nintey percent","90percent"),
c("particualry","particularly"),
c("perfer","prefer"),
c("persay",""), #just eliminate / extraneous
c("pletntiful","plentiful"),
c("Plexi Glass","plexiglass"),
c("positve","positive"),
c("postions","positions"),
c("prompty","promptly"),
c("puticular","particular"),
c("questons","questions"),
c("refferences","references"),
c("ressource","resource"),
c("ressources","resources"),
c("serie","series"), #alert
c("sifficient","sufficient"),
c("strenghts","strengths"),
c("stylis","stylus"),
c("THe","The"),
c("timefram","time frame"),
c("timeframe","time frame"),
c("timeframes","time frames"),
c("timeline","time line"),
c("timelines","time lines"),
c("unintentially","unintentionally"),
c("unprecedent","unprecedented")
)) %>%
adjColNames(.,c("error","corrected"))
# Change misSpellings into substitution ready patterns
p1 = misSpelled %>%
mutate(error = paste0("\\b",error,"\\b"))
misSpelled
# Discovered misspelling
misSpelled <- data.frame(rbind(
c("adminsitrave","administrative"),
c("assesment","assessment"),
c("back and forths","redundant communication"),
c("beuracracy","bureaucracy"),
c("carreer","career"),
c("clickets","clicks"),
c("Clients's","client's"),
c("Cluster's","clusters"),
c("collegues","colleagues"),
c("collugies","colleagues"),
c("communicatiuons","communications"),
c("consistetnly","consistently"),
c("constent","constant"),
c("containg","containing"),
c("coporate","corporate"),
c("costings","costing"),
c("curretn","current"),
c("desking","desk"),
c("eceptional","exceptional"),
c("effrective","effective"),
c("emapathy","empathy"),
c("emial","email"),
c("empath ","empathetic"),
c("enthusiactic","enthusiastic"),
c("excellente","excellent"),
c("explaination","explanation"),
c("finanace","finance"),
c("gliches","glitches"),
c("inforamtion","information"),
c("inperson","in person"),
c("interfereing","interfering"),
c("intrical","integral"),
c("leavning","leaving"),
c("managment","management"),
c("nintey percent","90percent"),
c("particualry","particularly"),
c("perfer","prefer"),
c("persay",""), #just eliminate / extraneous
c("pletntiful","plentiful"),
c("Plexi Glass","plexiglass"),
c("positve","positive"),
c("postions","positions"),
c("prompty","promptly"),
c("puticular","particular"),
c("questons","questions"),
c("refferences","references"),
c("ressource","resource"),
c("ressources","resources"),
c("serie","series"), #alert
c("sifficient","sufficient"),
c("strenghts","strengths"),
c("stylis","stylus"),
c("THe","The"),
c("timefram","time frame"),
c("timeframe","time frame"),
c("timeframes","time frames"),
c("timeline","time line"),
c("timelines","time lines"),
c("unintentially","unintentionally"),
c("unprecedent","unprecedented")
)) #%>%
misSpelled
colnames(misSpelled)
knitr::opts_chunk$set(echo = TRUE)
# Installs if needed
# install.packages("googleLanguageR")
# install.packages("qdapDictionaries")
# install.packages("reticulate")
# Load General Packages
library(dplyr)
library(R.utils)
library(stringr)
library(tidyr)
library(tidytext)
library(tidyverse)
library(word2vec)
library(xlsx)
# Load Visualization Packages
library(ggplot2)
library(gridExtra)
# For word searching
## Words list that includes variations of words (e.g. searched, searching, etc. for search)
library(qdapDictionaries)
# For Translation
library(googleLanguageR)
# Load authorization
gl_auth("/Users/johnbrooks/Dropbox/Synced/Credentials/API/STAT 5702 - Text Translation-df0390ca10f9.json")
# https://cran.r-project.org/web/packages/googleLanguageR/vignettes/setup.html
# For Python
library(reticulate)
# use_python("/usr/local/bin/python3")
# use_python may not be sufficient
## For maximal override:
## Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
## To naturally adjust this:
## go to terminal and explore in base directory
## ls -a
## if .Renviron is defined then skip touching otherwise touch to create the file:
## touch .Renviron
## now edit the file:
## nano .Renviron
## now add the line:
## RETICULATE_PYTHON="enter your desired path here"
## e.g. RETICULATE_PYTHON="/usr/local/bin/python3"
## now exit and save
## command + X or ctrl + X
## press Y when prompted
# Check success with
## reticulate::py_discover_config()
## reticulate::py_config()
# Store path
storePath = "/Users/johnbrooks/Dropbox/R_files/Users/johnbrooks/Dropbox/Synced/R/STAT 5702/Store/"
# Read in initial data
rawData <- read.xlsx(paste0(storePath,"Redacted FAB_Project_raw_data_Clean EXCEL Dec.23"),1)
# Read in initial data
rawData <- read.xlsx(paste0(storePath,"Redacted FAB_Project_raw_data_Clean EXCEL Dec.23.xlsx"),1)
rawData
# Process columns
columnNamesStore <- names(rawData)
# Instantiate a data frame for cleaning
cleanData <- rawData
names(cleanData) <- paste("c",1:ncol(cleanData),sep="_")
# If you want to see the data
# View(cleanData)
# Bring out the non-caegorical columns (on manual read through)
nonCatColumns <- c(14,
22,
30,
40,
41,
43,
45,
46,
48)
# Scrape free text columns
procData <- cleanData[,c(1,2,nonCatColumns)]
newNames <- names(procData)
selectNames  <- newNames[c(3:length(newNames))]
selectNames
newNames
procData
!file.exists(paste0(storePath,"frenchToEnglish.rds"))
!file.exists(paste0(storePath,"masterResponse.xlsx"))
read.xlsx(paste0(storePath,"initialsVerification.xlsx"))
read.xlsx(paste0(storePath,"initialsVerification.xlsx"),1)
list(1,2)
list(list(1,2),list(3,4)) -> a
a
a[1]
a[1][1]
a[[1][1]]
a[[1]][1]
a[[1]][2]
a[[2]][2]
py$t14t1
seq(1,13,2)
seq(2,13,2)
e <- c(4,3,6,9,2,1,4,2)
order(e)
e[order(e)]
e[order(e,decreasing = TRUE)]
order(e,decreasing = TRUE)
order(e,decreasing = TRUE) -> u
u
u[1:2]
